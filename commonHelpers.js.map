{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst startBtn = document.querySelector('button[data-start]');\nconst dateSelector = document.querySelector('#datetime-picker');\nstartBtn.disabled = true;\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() < Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        color: 'red',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDates[0].getTime();\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\nstartBtn.addEventListener('click', start);\nlet isActive = false;\n\nfunction start() {\n  isActive = true;\n  controlsState(isActive);\n  const timerID = setInterval(() => {\n    const endTime = Date.now();\n    const deltaTime = userSelectedDate - endTime;\n\n    if (deltaTime > 0) {\n      const timeLeft = convertMs(deltaTime);\n      Object.keys(timeLeft).forEach(section => {\n        const timerElement = document.querySelector(`[data-${section}]`);\n        timerElement.textContent = addLeadingZero(timeLeft[section]);\n      });\n    } else {\n      clearInterval(timerID);\n      isActive = false;\n      controlsState(isActive);\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction controlsState(isActive) {\n  dateSelector.disabled = isActive;\n  dateSelector.style.cursor = isActive ? 'not-allowed' : 'default';\n  startBtn.disabled = true;\n  startBtn.style.cursor = isActive ? 'not-allowed' : 'default';\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","dateSelector","userSelectedDate","options","selectedDates","iziToast","flatpickr","start","isActive","controlsState","timerID","endTime","deltaTime","timeLeft","convertMs","section","timerElement","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAIA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAe,SAAS,cAAc,kBAAkB,EAC9DD,EAAS,SAAW,GACpB,IAAIE,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpCC,EAAS,KAAK,CACZ,QAAS,qCACT,MAAO,MACP,SAAU,UAClB,CAAO,EACDL,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBE,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAE9C,CACH,EACAE,EAAU,mBAAoBH,CAAO,EACrCH,EAAS,iBAAiB,QAASO,CAAK,EACxC,IAAIC,EAAW,GAEf,SAASD,GAAQ,CACfC,EAAW,GACXC,EAAcD,CAAQ,EACtB,MAAME,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAU,KAAK,MACfC,EAAYV,EAAmBS,EAErC,GAAIC,EAAY,EAAG,CACjB,MAAMC,EAAWC,EAAUF,CAAS,EACpC,OAAO,KAAKC,CAAQ,EAAE,QAAQE,GAAW,CACvC,MAAMC,EAAe,SAAS,cAAc,SAASD,CAAO,GAAG,EAC/DC,EAAa,YAAcC,EAAeJ,EAASE,CAAO,CAAC,CACnE,CAAO,CACP,MACM,cAAcL,CAAO,EACrBF,EAAW,GACXC,EAAcD,CAAQ,CAEzB,EAAE,GAAI,CACT,CAEA,SAASM,EAAUI,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASb,EAAcD,EAAU,CAC/BP,EAAa,SAAWO,EACxBP,EAAa,MAAM,OAASO,EAAW,cAAgB,UACvDR,EAAS,SAAW,GACpBA,EAAS,MAAM,OAASQ,EAAW,cAAgB,SACrD,CAEA,SAASS,EAAeM,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}